(function(n) {
    "use strict";

    function t(t) {
        var r, i;
        this.config = {};
        n.extend(this, e);
        t && n.extend(this, t);
        r = {};
        for (i in this.output_fields) this.output_fields[i] !== undefined && (r[i] = n(this.output_fields[i]));
        this.$output_fields = r
    }
    var i = [],
        r, u = "https://api.getAddress.io/suggest",
        f = "https://api.getAddress.io/get",
        e = {
            api_key: "",
            output_fields: {
                line_1: "#line1",
                line_2: "#line2",
                line_3: "#line3",
                post_town: "#town",
                county: "#county",
                postcode: "#postcode",
                latitude: "#latitude",
                longitude: "#longitude",
                building_number: "#building_number",
                building_name: "#building_name",
                building_name_or_number: "#building_name_or_number",
                sub_building_number: "#sub_building_number",
                sub_building_name: "#sub_building_name",
                sub_building_name_or_number: "#sub_building_name_or_number",
                thoroughfare: "#thoroughfare"
            },
            api_suggest_endpoint: u,
            api_get_endpoint: f,
            timeout: 4e3,
            input: undefined,
            $input: undefined,
            input_label: "Search..",
            input_muted_style: "color:#CBCBCB;",
            input_class: "",
            input_id: "getaddress_input",
            input_name: "getaddress_input",
            button: undefined,
            $button: undefined,
            button_id: "getaddress_button",
            button_label: "Search",
            button_class: "",
            button_disabled_message: "Fetching Addresses...",
            $dropdown: undefined,
            dropdown_id: "getaddress_dropdown",
         
            dropdown_select_message: "Select your Address",
            dropdown_class: "getaddress_dropdown_class",
            $error_message: undefined,
            error_message_id: "getaddress_error_message",
            error_message_postcode_invalid: "Address not found",
            error_message_postcode_not_found: "Address not found",
            error_message_default: "Address not found",
            error_message_class: "",
            lookup_interval: 1e3,
            onLookupSuccess: undefined,
            onLookupError: undefined,
            onAddressSelected: undefined
        };
    n.support && n.support.cors === !1 && (n.support.cors = !0);
    Array.prototype.clean = function(n) {
        for (var t = 0; t < this.length; t++) this[t] == n && (this.splice(t, 1), t--);
        return this
    };
    String.prototype.trim || (String.prototype.trim = function() {
        return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")
    });
    t.prototype.setupPostcodeInput = function(n) {
        this.$context = n;
        this.setupInputField();
        this.setupLookupButton();
        this.api_response = {}
    };
    t.prototype.setupInputField = function() {
        var t = this;
        return this.$input = n(this.input).length ? n(this.input).first() : n("<input />", {
            type: "text",
            id: this.input_id,
            value: this.input_label
        }).appendTo(this.$context).addClass(this.input_class).val(this.input_label).attr("style", this.input_muted_style).attr("name", this.input_name).attr("autocomplete", "off").submit(function() {
            return !1
        }).keypress(function(n) {
            n.which === 13 && t.$button.trigger("click")
        }).focus(function() {
            t.$input.removeAttr("style").val("")
        }).blur(function() {
            t.$input.val() || (t.$input.val(t.input_label), t.$input.attr("style", t.input_muted_style))
        }), this.$input
    };
    t.prototype.setupLookupButton = function() {
        var t = this;
        return this.$button = n(this.button).length ? n(this.button).first() : n("<button />", {
            html: this.button_label,
            id: this.button_id,
            type: "button"
        }).appendTo(this.$context).addClass(this.button_class).attr("onclick", "return false;").submit(function() {
            return !1
        }), this.$button.click(function() {
            var n = t.$input.val();
            t.disableLookup();
            t.clearAll();
            t.lookupPostcode(n)
        }), this.$button
    };
    t.prototype.disableLookup = function(n) {
        n = n || this.button_disabled_message;
        this.$button.prop("disabled", !0).html(n)
    };
    t.prototype.enableLookup = function() {
        var n = this;
        n.lookup_interval === 0 ? n.$button.prop("disabled", !1).html(n.button_label) : setTimeout(function() {
            n.$button.prop("disabled", !1).html(n.button_label)
        }, n.lookup_interval)
    };
    t.prototype.clearAll = function() {
        this.api_response = {};
        this.setDropDown();
        this.setErrorMessage();
        this.setAddressFields()
    };
    t.prototype.removeAll = function() {
        this.$context = null;
        n.each([this.$input, this.$button, this.$dropdown, this.$error_message], function(n, t) {
            t && t.remove()
        })
    };
    t.prototype.lookupPostcode = function(t) {
        var i = this;
        n.getAddress.lookupPostcode(t, i.api_key, function(n) {
            if (n.suggestions && n.suggestions.length !== 0) {
                if (i.api_response = n, i.enableLookup(), i.setDropDown(n.suggestions), i.onLookupSuccess) i.onLookupSuccess(n)
            } else i.setErrorMessage(i.error_message_postcode_not_found), i.enableLookup(), i.onLookupError && i.onLookupError()
        }, function(n) {
            i.api_response = {};
            n.status === 404 ? i.setErrorMessage(i.error_message_postcode_not_found) : n.status === 400 ? i.setErrorMessage(i.error_message_postcode_invalid) : i.setErrorMessage(i.error_message_default);
            i.enableLookup();
            i.onLookupError && i.onLookupError()
        }, i.api_suggest_endpoint, i.timeout)
    };
    t.prototype.setDropDown = function(t) {
        var i = this,
            r, f, u, e, o;
        if (this.$dropdown && this.$dropdown.length && (this.$dropdown.remove(), delete this.$dropdown), t) {
            for (r = n("<select />", {
                    id: i.dropdown_id
                }).addClass(i.dropdown_class), n("<option />", {
                    value: "open",
                    text: i.dropdown_select_message
                }).appendTo(r), f = t.length, u = 0; u < f; u += 1) e = t[u].address, o = t[u].id, n("<option />", {
                value: o,
                text: e
            }).appendTo(r);
            return r.appendTo(i.$context).change(function() {
                var t = n(this).val(),
                    u = this.selectedOptions[0].text,
                    r;
			$(".custom-address").addClass("d-none");
		    $(".qus-postcode").addClass("d-none");
		    $(".mannual-postcode").addClass("d-none");
            $(".confirm-address").removeClass("d-none");
		
		
			
            //$('#confirm-address').text(u);
				$( ".confirm-address" ).append( "<br><p>"+u+"</p>" );	
                t && (r = function(n) {
                    i.api_response = {};
                    n.status === 404 ? i.setErrorMessage(i.error_message_postcode_not_found) : n.status === 400 ? i.setErrorMessage(i.error_message_postcode_invalid) : i.setErrorMessage(i.error_message_default);
                    i.enableLookup();
                    i.onLookupError && i.onLookupError()
                }, i.setAddressFields(t, i.api_get_endpoint, i.api_key, i.timeout, r), i.onAddressSelected && i.onAddressSelected.call(this, {
                    id: t,
                    text: u
                }))
            }), i.$dropdown = r, r
        }
    };
    t.prototype.setErrorMessage = function(t) {
        if (this.$error_message && this.$error_message.length && (this.$error_message.remove(), delete this.$error_message), t) return this.$error_message = n("<p />", {
            html: t,
            id: this.error_message_id
        }).addClass(this.error_message_class).appendTo(this.$context), this.$error_message
    };
    t.prototype.setAddressFields = function(t, i, r, u, e) {
        var o = this,
            c, l, s, a, h;
        for (c in this.$output_fields) this.$output_fields[c].val("");
        t && i && (l = i + "/" + t, s = {}, (i === f || r) && (s = {
            "api-key": r
        }), a = function(n) {
            if (n) {
                if (o.$output_fields.line_1 && o.$output_fields.line_1.val(n.line_1 || ""), o.$output_fields.line_2 && o.$output_fields.line_2.val(n.line_2 || ""), n.line_3 && n.line_4 && o.$output_fields.line_3 ? o.$output_fields.line_3.val(n.line_3 + ", " + n.line_4) : n.line_3 && o.$output_fields.line_3 ? o.$output_fields.line_3.val(n.line_3 || "") : n.line_4 && o.$output_fields.line_3 && o.$output_fields.line_3.val(n.line_4 || ""), n.locality && n.town_or_city && o.$output_fields.post_town ? o.$output_fields.post_town.val(n.locality + ", " + n.town_or_city) : n.town_or_city && o.$output_fields.post_town ? o.$output_fields.post_town.val(n.town_or_city || "") : n.locality && o.$output_fields.post_town && o.$output_fields.post_town.val(n.locality || ""), o.$output_fields.county && o.$output_fields.county.val(n.county || ""), o.$output_fields.postcode) {
                    var t = n.postcode;
                    o.$output_fields.postcode.val(t || "")
                }
                o.$output_fields.latitude && o.$output_fields.latitude.val(n.latitude || "");
                o.$output_fields.longitude && o.$output_fields.longitude.val(n.longitude || "");
                o.$output_fields.building_number && o.$output_fields.building_number.val(n.building_number || "");
                o.$output_fields.building_name && o.$output_fields.building_name.val(n.building_name || "");
                o.$output_fields.building_name_or_number && n.building_number ? o.$output_fields.building_name_or_number.val(n.building_number || "") : o.$output_fields.building_name_or_number && n.building_name && o.$output_fields.building_name_or_number.val(n.building_name || "");
                o.$output_fields.sub_building_number && o.$output_fields.sub_building_number.val(n.sub_building_number || "");
                o.$output_fields.sub_building_name && o.$output_fields.sub_building_name.val(n.sub_building_name || "");
                o.$output_fields.sub_building_name_or_number && n.sub_building_number ? o.$output_fields.sub_building_name_or_number.val(n.sub_building_number || "") : o.$output_fields.sub_building_name_or_number && n.sub_building_name && o.$output_fields.sub_building_name_or_number.val(n.sub_building_name || "");
                o.$output_fields.thoroughfare && o.$output_fields.thoroughfare.val(n.thoroughfare || "")
            }
        }, h = {
            url: l,
            data: s,
            dataType: "json",
            timeout: u,
            success: a,
            type: "GET"
        }, e && (h.error = e), n.ajax(h))
    };
    n.getAddress = {
        defaults: function() {
            return e
        },
        setup: function(n) {
            r = new t(n);
            i.push(r)
        },
        lookupPostcode: function(t, i, r, f, e, o) {
            var c = [e, t].join("/"),
                s = {},
                h;
            (e === u || i) && (s = {
                "api-key": i
            });
            s.top = 1e3;
            h = {
                url: c,
                data: s,
                dataType: "json",
                timeout: o,
                success: r,
                type: "GET"
            };
            f && (h.error = f);
            n.ajax(h)
        },
        clearAll: function() {
            for (var t = i.length, n = 0; n < t; n += 1) i[n].removeAll()
        }
    };
    n.fn.getAddress = function(u) {
        if (u) {
            var f = new t(u);
            i.push(f);
            f.setupPostcodeInput(n(this))
        } else r.setupPostcodeInput(n(this));
        return this
    }
})(jQuery);